---
format:
  gfm:
    html-math-method: webtex
jupyter: python3
---

# Project overview

This repo explores different ways of making python fast.

Ideas explored: 

* Cython
* Threading
* Multiprocessing

# Cython

Python in an interpreted language that can be slow at times. Cython is a high performance language with syntax very similar to python. Cython is translated to C or C++ and then compiled. This repo contains a simple proof of concept where python code with **zero** changes is compiled and performance improves are observed.

fibonacci.pyx defines two cython functions. cython_performance_test uses these functions as if they are regular python functions.

Cython did not install in my main conda environment. I created a new environment for this project. Installing it along with other packages is a problem for another day.

conda create -n tempEnv python=3.10 cython ipykernel


# Threading POC

A very simple example of multithreading in python.

# Multiprocessing POC

A very simple example of multiprocessing in python. Per official documentation, multiprocessing does not work with an interactive console! Thus this method is not very useful to me. Code should work if executed the correct way. However, I did not bother figuring out how to execute it correctly. I am always in an interactive console.



